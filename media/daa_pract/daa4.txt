#include <iostream>
#include <limits>
using namespace std;

void inputArray(int arr[], int n) {
    cout << "Enter " << n << " numbers separated by spaces: ";
    for(int i = 0; i < n; i++) {
        cin >> arr[i];
    }
}

void outputArray(int arr[], int n) {
    cout << "Array elements: ";
    for(int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int partition(int arr[], int start, int end) {
    int pivot = arr[end];
    int pos = start;
    for (int i = start; i < end; i++) {
        if (arr[i] <= pivot) {
            swap(arr[i], arr[pos]);
            pos++;
        }
    }
    swap(arr[pos], arr[end]);
    return pos;
}

void sortQuick(int arr[], int start, int end) {
    if (start >= end)
        return;

    int pivot = partition(arr, start, end);
    // left side
    sortQuick(arr, start, pivot - 1);
    // right side
    sortQuick(arr, pivot + 1, end);
}

int main() {
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;
    
    if (n <= 0) {
        cout << "Invalid number of elements" << endl;
        return 1; 
    }

    int arr[n];
    inputArray(arr, n);
    
    cout << "Before sorting: ";
    outputArray(arr, n);

    sortQuick(arr, 0, n - 1);
    
        // Time Complexity:
        // Average: O(N log N)
        // Worst: O(NÂ²)

        // Space Complexity:
        // Average: O(log N)
        // Worst: O(N) 
    
    cout << "After sorting: ";
    outputArray(arr, n);
    
    return 0;
}