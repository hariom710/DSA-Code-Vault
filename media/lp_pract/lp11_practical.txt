prog.l
%option noyywrap
%{
#include"y.tab.h"  // which contains the definitions for the tokens generated by Bison.
%}
%%
hello  { return HELLO ;}
. { }  //  matches any single character (except newline) and does nothing (the empty action).
\n { }

%%


prog.y
%{
#include<stdio.h>
%}
%token HELLO;  // declares a token
%%
begin:    //  begin rule is empty, allowing the parser to accept an empty input.
        |msg
        ;    
msg:HELLO { printf("good day");}  //  msg rule matches the HELLO token and prints "good day" when the token is recognized.
   ;
%%

void yyerror(char *s)   //This function is called by Bison when an error occurs during parsing. It takes a string s as input and prints it to standard error.
{
fprintf(stderr,"%s\n",s);
return;
}

int main()
{
yyparse();  // begins the parsing process. AND it reads input and attempts to match it against the grammar defined in the Bison file.
return 0;
}